{"remainingRequest":"/Users/jifangli/Documents/work/project-tms-admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/jifangli/Documents/work/project-tms-admin/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/jifangli/Documents/work/project-tms-admin/src/router/index.js","dependencies":[{"path":"/Users/jifangli/Documents/work/project-tms-admin/src/router/index.js","mtime":1563936715203},{"path":"/Users/jifangli/Documents/work/project-tms-admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jifangli/Documents/work/project-tms-admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jifangli/Documents/work/project-tms-admin/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/jifangli/Documents/work/project-tms-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _handleStorage = require(\"@/utils/handleStorage\");\n\nvar _error = _interopRequireDefault(require(\"@/router/base/error\"));\n\nvar _handleData = require(\"@/utils/handleData\");\n\nvar _auth = _interopRequireDefault(require(\"@/utils/auth\"));\n\nvar _base = _interopRequireDefault(require(\"./base/\"));\n\n/* eslint-disable */\n// progress bar\n// progress bar style\n// import { userInfo } from '@/api/base/'\n// import { logout } from '@/api/base'\nvar handleToken = new _auth.default();\n\n_vue.default.use(_vueRouter.default);\n\nvar router = new _vueRouter.default({\n  mode: 'history',\n  scrollBehavior: function scrollBehavior() {\n    return {\n      y: 0\n    };\n  },\n  base: process.env.BASE_URL,\n  routes: _base.default\n});\n\n_nprogress.default.configure({\n  showSpinner: false\n}); // 页面加载滚动条的设置\n\n/**\n * 免登录白名单\n * 重点介绍 '/authredirect' ，这个页面的功能是：某个页面需要需要登录，登录后再跳转回原来的页面，并携带着之前的参数\n */\n\n\nvar whiteList = ['/login', '/authredirect'];\nrouter.beforeEach(function (to, from, next) {\n  if (!to.meta.noCache) {\n    if (to.name !== null) {\n      _store.default.commit('ADD_VISITED_VIEWS', to);\n    }\n  } // 开始滚动条\n\n\n  _nprogress.default.start();\n\n  document.querySelector('#nprogress .bar').style.background = _store.default.getters.themeColor;\n  resetStore(); // 如果有token的缓存\n\n  if (handleToken.getToken()) {\n    if (_store.default.getters.menuMap === null) {\n      // 判断当前用户还没有拉取完user_info信息，所以权限数据的长度为0\n      userInfo().then(function (res) {\n        var data = res.data; // 获取当前版本并加载当前版本的路由\n\n        _store.default.commit('SET_BASE_INFO', data.baseInfo);\n\n        routers = [].concat(routers, _error.default);\n        router.addRoutes(routers); // 初始化菜单和默认显示菜单\n\n        var menuMap = (0, _handleData.formatMenuMap)(data.permission);\n        var menuIndex = (0, _handleData.getMenuIndex)(menuMap);\n        var moduleMenuIndex = (0, _handleStorage.getStorage)('moduleMenuIndex');\n        var firstMenuIndex = (0, _handleStorage.getStorage)('firstMenuIndex');\n        var secondMenuIndex = JSON.parse((0, _handleStorage.getStorage)('secondMenuIndex'));\n        var currentPath = (0, _handleStorage.getStorage)('currentPath');\n\n        _store.default.commit('SET_MENU_MAP', menuMap);\n\n        if (to.path === '/') {\n          var secondMenu = menuMap[0].children[0].children[0].children[0];\n\n          _store.default.commit('SET_MENU_INDEX', [0, 0, secondMenu, secondMenu.url]);\n        } else if (to.path == currentPath) {\n          _store.default.commit('SET_MENU_INDEX', [moduleMenuIndex, firstMenuIndex, secondMenuIndex, currentPath]);\n        } else if (menuIndex.hasOwnProperty(to.path)) {\n          _store.default.commit('SET_MENU_INDEX', menuIndex[to.path]);\n        } else {\n          _store.default.commit('SET_MENU_INDEX', [moduleMenuIndex, firstMenuIndex, secondMenuIndex, to.fullPath]);\n        }\n      }).catch(function (err) {\n        console.error('获取用户信息失败 or 用户信息处理失败', err); // next({ path: '/' })\n\n        logout().then(function (res) {\n          handleToken.removeToken();\n          router.push({\n            path: '/login'\n          });\n        });\n      });\n    } else {\n      if (_store.default.getters.baseInfo.loginType === '1' && to.path !== '/changePassword') {\n        next({\n          path: '/changePassword',\n          replace: true\n        });\n        return;\n      } // 如果通过链接直接跳转某个页面，且该页面是二级页面\n\n\n      var menuMap = _store.default.getters.menuMap;\n      var menuIndex = (0, _handleData.getMenuIndex)(menuMap);\n      var path = to.meta.pubPage || to.path;\n\n      if (menuIndex.hasOwnProperty(path)) {\n        var setMenuIndex = menuIndex[path];\n\n        _store.default.commit('SET_MENU_INDEX_NO', setMenuIndex);\n      }\n\n      next();\n    }\n  } else {\n    // 如果没有token缓存\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next('/login'); // 否则全部重定向到登录页\n\n      _nprogress.default.done(); // 如果当前页面是登录的，就会触发afterEach钩子，所以需要手动关闭滚动条\n\n    }\n  }\n});\nrouter.afterEach(function (to, from) {\n  _store.default.commit('SET_CURRENT_PATH', to.fullPath);\n\n  if (!to.meta.mustCache) {\n    if (to.name !== null) {\n      _store.default.commit('DEL_VISITED_VIEWS', from);\n    }\n  } // 结束滚动条\n\n\n  _nprogress.default.done();\n});\n\nfunction resetStore() {\n  // 重置公共状态\n  var getters = _store.default.getters;\n\n  if (getters.tableSelectArr.length !== 0) {\n    _store.default.commit('SET_TABLE_SELECT_ARR', []);\n  }\n\n  if (getters.pageTitle !== '') {\n    _store.default.commit('SET_PAGE_TITLE', '');\n  }\n\n  if (getters.tableSelectArr.length !== 0) {\n    _store.default.commit('SET_TABLE_SELECT_ARR', []);\n  }\n}\n\nvar _default = router;\nexports.default = _default;",null]}